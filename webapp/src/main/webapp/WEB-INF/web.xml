<?xml version="1.0"?>

<!DOCTYPE web-app PUBLIC 
    "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" 
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<!--

 Copyright 2003-2007 The eFaps Team

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

 Author:          tmo
 Revision:        $Rev$
 Last Changed:    $Date$
 Last Changed By: $Author$

-->

<web-app>
  <display-name>eFaps</display-name>
  <description>no description</description>

  <context-param>
    <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
    <param-value>server</param-value>
    <description>
      State saving method: "client" or "server" (= default)
      See JSF Specification 2.5.2
    </description>
  </context-param>

  <context-param>
    <param-name>org.apache.myfaces.ALLOW_JAVASCRIPT</param-name>
    <param-value>true</param-value>
    <description>
      This parameter tells MyFaces if javascript code should be allowed in the
      rendered HTML output.
      If javascript is allowed, command_link anchors will have javascript code
      that submits the corresponding form.
      If javascript is not allowed, the state saving info and nested parameters
      will be added as url parameters.
      Default: "true"
    </description>
  </context-param>

  <context-param>
    <param-name>org.apache.myfaces.DETECT_JAVASCRIPT</param-name>
    <param-value>false</param-value>
  </context-param>

  <context-param>
    <param-name>org.apache.myfaces.PRETTY_HTML</param-name>
    <param-value>true</param-value>
    <description>
      If true, rendered HTML code will be formatted, so that it is "human readable".
      i.e. additional line separators and whitespace will be written, that do not
      influence the HTML code.
      Default: "true"
    </description>
  </context-param>

  <context-param>
    <param-name>org.apache.myfaces.AUTO_SCROLL</param-name>
    <param-value>true</param-value>
    <description>
      If true, a javascript function will be rendered that is able to restore the
      former vertical scroll on every request. Convenient feature if you have pages
      with long lists and you do not want the browser page to always jump to the top
      if you trigger a link or button action that stays on the same page.
      Default: "false"
    </description>
  </context-param>

  <!-- filter used for basic authentication for WebDAV -->
  <filter>
    <filter-name>eFapsBasicAuthenticationFilter</filter-name>
    <filter-class>org.efaps.webapp.filter.BasicAuthenticationFilter</filter-class>
    <init-param>
      <param-name>application</param-name>
      <param-value>eFaps</param-value>
      <description>
        The value defines the JAAS application name. This is the name defined
        in the JAAS configuration file.
        The default value is 'eFaps'.
      </description>
    </init-param>
    <init-param>
      <param-name>title</param-name>
      <param-value>eFaps WebDAV</param-value>
      <description>
        Text which is displayed in the login dialog on the user client.
      </description>
    </init-param>
  </filter>

  <!-- filter used for form based authentication -->
  <filter>
    <filter-name>eFapsFormBasedAuthenticationFilter</filter-name>
    <filter-class>org.efaps.webapp.filter.FormBasedAuthenticationFilter</filter-class>
     <init-param>
      <param-name>application</param-name>
      <param-value>eFaps</param-value>
      <description>
        The value defines the JAAS application name. This is the name defined
        in the JAAS configuration file.
        The default value is 'eFaps'.
      </description>
    </init-param>
    <init-param>
      <param-name>urlLoginPage</param-name>
      <param-value>/login.jsp</param-value>
      <description>
        URL to the login jsp. The URL must be defined without the servlet
        context name.
        The default value is 'login.jsp'.
      </description>
    </init-param>
    <init-param>
      <param-name>urlLogin</param-name>
      <param-value>/login</param-value>
      <description>
        URL to the login request. The URL must be defined without the servlet
        context name.
        The default value is 'login'.
      </description>
    </init-param>
    <init-param>
      <param-name>urlLogout</param-name>
      <param-value>/logout</param-value>
      <description>
        URL to the logout request. The URL must be defined without the servlet
        context name.
        The default value is 'logout'.
      </description>
    </init-param>
    <init-param>
      <param-name>urlForward</param-name>
      <param-value>${COMMONURL}/Main.jsf</param-value>
      <description>
        The value defines the URL to which is forward if a login is correct.
        The default value is '${COMMONURL}/Main.jsf'.
      </description>
    </init-param>
    <init-param>
      <param-name>loginParamName</param-name>
      <param-value>name</param-value>
      <description>
        Defines the name of the name login parameter 
        The default value is 'name'.
      </description>
    </init-param>
    <init-param>
      <param-name>loginParamPassword</param-name>
      <param-value>password</param-value>
      <description>
        Defines the name of the password login parameter 
        The default value is 'password'.
      </description>
    </init-param>
  </filter>

  <!-- filter used to make a whole transaction for one request -->
  <filter>
    <filter-name>eFapsTransactionFilter</filter-name>
    <filter-class>org.efaps.webapp.filter.TransactionFilter</filter-class>
  </filter>

  <!-- Extensions Filter used for Apache myFaces -->
  <filter>
    <filter-name>eFapsFacesFilter</filter-name>
    <filter-class>org.apache.myfaces.webapp.filter.ExtensionsFilter</filter-class>
    <init-param>
      <param-name>maxFileSize</param-name>
      <param-value>100m</param-value>
      <description>Set the size limit for uploaded files.
          Format: 10 - 10 bytes
                  10k - 10 KB
                  10m - 10 MB
                  1g - 1 GB
      </description>
    </init-param>
<!--
    <init-param>
      <param-name>uploadThresholdSize</param-name>
      <param-value>100k</param-value>
      <description>Set the threshold size - files
              below this limit are stored in memory, files above
              this limit are stored on disk.

          Format: 10 - 10 bytes
                  10k - 10 KB
                  10m - 10 MB
                  1g - 1 GB
      </description>
    </init-param>
-->
    <!--        <init-param>
            <param-name>uploadRepositoryPath</param-name>
            <param-value>/temp</param-value>
            <description>Set the path where the intermediary files will be stored.
            </description>
        </init-param>-->
  </filter>

  <filter-mapping>
    <filter-name>eFapsBasicAuthenticationFilter</filter-name>
    <url-pattern>/webdav/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>eFapsFormBasedAuthenticationFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>eFapsTransactionFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- extension mapping for adding <script/>, <link/>, and other resource tags
       to JSF-pages  -->
  <filter-mapping>
    <filter-name>eFapsFacesFilter</filter-name>
    <!-- servlet-name must match the name of your javax.faces.webapp.FacesServlet entry -->
    <servlet-name>eFapsFacesServlet</servlet-name>
  </filter-mapping>

  <!-- extension mapping for serving page-independent resources (javascript,
       stylesheets, images, etc.)  -->
  <filter-mapping>
    <filter-name>eFapsFacesFilter</filter-name>
    <url-pattern>/faces/myFacesExtensionResource/*</url-pattern>
  </filter-mapping>

  <!-- extension mapping for adding <script/>, <link/>, and other resource tags
       to JSF-pages  -->
  <filter-mapping>
    <filter-name>eFapsFacesFilter</filter-name>
    <url-pattern>*.jsf</url-pattern>
  </filter-mapping>

  <servlet>
    <servlet-name>eFapsServlet</servlet-name>
    <display-name>eFapsServlet</display-name>
    <description>no description</description>
    <servlet-class>org.efaps.servlet.RequestHandler</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>eFapsCheckoutServlet</servlet-name>
    <display-name>eFapsCheckoutServlet</display-name>
    <description>eFaps servlet used to checkout files.</description>
    <servlet-class>org.efaps.servlet.CheckoutServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>eFapsImageServlet</servlet-name>
    <display-name>eFapsImageServlet</display-name>
    <description>eFaps servlet used to checkout images stored in the database.</description>
    <servlet-class>org.efaps.servlet.ImageServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>eFapsWebDAVServlet</servlet-name>
    <display-name>eFapsWebDAVServlet</display-name>
    <description>eFaps servlet used for WebDAV access</description>
    <servlet-class>org.efaps.servlet.WebDAVServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- Java Faces Servlet -->
  <servlet>
    <servlet-name>eFapsFacesServlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- -->
  <servlet-mapping>
    <servlet-name>eFapsServlet</servlet-name>
    <url-pattern>/request/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>eFapsCheckoutServlet</servlet-name>
    <url-pattern>/servlet/checkout/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>eFapsImageServlet</servlet-name>
    <url-pattern>/servlet/image/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>eFapsWebDAVServlet</servlet-name>
    <url-pattern>/webdav/*</url-pattern>
  </servlet-mapping>

  <!-- extension mapping -->
  <servlet-mapping>
    <servlet-name>eFapsFacesServlet</servlet-name>
    <url-pattern>*.jsf</url-pattern>
  </servlet-mapping>

<session-config>
  <session-timeout>3000</session-timeout>
</session-config>

  <!-- Establish the default list of welcome files -->
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>

  <taglib>
    <taglib-uri>http://jakarta.apache.org/taglibs/i18n-1.0</taglib-uri>
    <taglib-location>/WEB-INF/lib/taglibs-i18n.jar</taglib-location>
  </taglib>

  <taglib>
    <taglib-uri>http://jakarta.apache.org/taglibs/string</taglib-uri>
    <taglib-location>/WEB-INF/lib/string-1.1.0.jar</taglib-location>
  </taglib>

  <taglib>
    <taglib-uri>http://jakarta.apache.org/taglibs/unstandard-1.0</taglib-uri>
    <taglib-location>/WEB-INF/lib/taglibs-unstandard.jar</taglib-location>
  </taglib>

  <!-- Reference to the database JDBC data source -->
  <resource-ref>
    <description></description>
    <res-ref-name>eFaps/jdbc</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

  <!-- Reference to the database Type class implementation -->
  <resource-ref>
    <description></description>
    <res-ref-name>eFaps/dbType</res-ref-name>
    <res-type>org.efaps.db.databases.AbstractDatabase</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

  <!-- Reference to the document store resource -->
  <resource-ref>
    <description></description>
    <res-ref-name>eFaps/store/documents</res-ref-name>
    <res-type>org.efaps.db.transaction.VFSStoreFactoryBean</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
</web-app>

