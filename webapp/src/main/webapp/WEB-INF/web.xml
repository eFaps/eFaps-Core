<?xml version="1.0"?>

<!DOCTYPE web-app PUBLIC 
    "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" 
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<!--
  
  Copyright 2003 - 2009 The eFaps Team
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  
  Author:          tmo
  Revision:        $Rev$
  Last Changed:    $Date$
  Last Changed By: $Author$
  
-->

<web-app>
  <display-name>eFaps</display-name>
  <description>no description</description>

  <!--  
    There are three means to configure Wickets configuration mode and they are
    tested in the order given. 
    1) A system property: -Dwicket.configuration
    2) servlet specific <init-param>
    3) context specific <context-param>
    The value might be either "development" (reloading when templates change)
    or "deployment". If no configuration is found, "deployment" is the default.
  -->
  <context-param>
    <param-name>configuration</param-name>
    <param-value>development</param-value>
  </context-param>


  <!-- filter used for basic authentication for WebDAV -->
  <filter>
    <filter-name>eFapsBasicAuthenticationFilter</filter-name>
    <filter-class>
      org.efaps.ui.wicket.filter.BasicAuthenticationFilter
    </filter-class>
    <init-param>
      <param-name>application</param-name>
      <param-value>eFaps</param-value>
      <description>
        The value defines the JAAS application name. This is the name defined in
        the JAAS configuration file. The default value is 'eFaps'.
      </description>
    </init-param>
    <init-param>
      <param-name>title</param-name>
      <param-value>eFaps WebDAV</param-value>
      <description>
        Text which is displayed in the login dialog on the user client.
      </description>
    </init-param>
  </filter>

  <!-- filter used for form based authentication
  <filter>
    <filter-name>eFapsFormBasedAuthenticationFilter</filter-name>
    <filter-class>
      org.efaps.ui.wicket.filter.FormBasedAuthenticationFilter
    </filter-class>
    <init-param>
      <param-name>application</param-name>
      <param-value>eFaps</param-value>
      <description>
        The value defines the JAAS application name. This is the name defined in
        the JAAS configuration file. The default value is 'eFaps'.
      </description>
    </init-param>
    <init-param>
      <param-name>urlLoginPage</param-name>
      <param-value>/webapp/</param-value>
      <description>
        URL to the login jsp. The URL must be defined without the servlet
        context name. The default value is 'login.jsp'.
      </description>
    </init-param>
    <init-param>
      <param-name>urlIgnore</param-name>
      <param-value>/open</param-value>
      <description>
        URL that contains unprotected Content (e.g. image and css files for the
        login page) There is no default value, meanig that there is no
        unprotected content by default.
      </description>
    </init-param>
    <init-param>
      <param-name>urlLogin</param-name>
      <param-value>/login</param-value>
      <description>
        URL to the login request. The URL must be defined without the servlet
        context name. The default value is 'login'.
      </description>
    </init-param>
    <init-param>
      <param-name>urlLogout</param-name>
      <param-value>/logout</param-value>
      <description>
        URL to the logout request. The URL must be defined without the servlet
        context name. The default value is 'logout'.
      </description>
    </init-param>
    <init-param>
      <param-name>urlForward</param-name>
      <param-value>${COMMONURL}/Main.jsf</param-value>
      <description>
        The value defines the URL to which is forward if a login is correct. The
        default value is '${COMMONURL}/Main.jsf'.
      </description>
    </init-param>
    <init-param>
      <param-name>loginParamName</param-name>
      <param-value>name</param-value>
      <description>
        Defines the name of the name login parameter The default value is
        'name'.
      </description>
    </init-param>
    <init-param>
      <param-name>loginParamPassword</param-name>
      <param-value>password</param-value>
      <description>
        Defines the name of the password login parameter The default value is
        'password'.
      </description>
    </init-param>
  </filter>
 -->
  <!-- filter used to make a whole transaction for one request -->
  <filter>
    <filter-name>eFapsTransactionFilter</filter-name>
    <filter-class>org.efaps.ui.wicket.filter.TransactionFilter</filter-class>
  </filter>

  <filter>
    <filter-name>eFaps</filter-name>
    <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
    <init-param>
      <param-name>applicationClassName</param-name>
      <param-value>org.efaps.ui.wicket.EFapsApplication</param-value>
    </init-param>
  </filter>


<filter>
  <filter-name>test</filter-name>
  <filter-class>org.efaps.ui.filter.TestFilter</filter-class>
</filter>


  <!-- filter-mapping>
    <filter-name>eFaps</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping-->

  <filter-mapping>
    <filter-name>eFapsBasicAuthenticationFilter</filter-name>
    <url-pattern>/webdav/*</url-pattern>
  </filter-mapping>
<!--  
  <filter-mapping>
    <filter-name>eFapsFormBasedAuthenticationFilter</filter-name>
    <url-pattern>/deaktiviert/*</url-pattern>
  </filter-mapping>
-->
  <filter-mapping>
    <filter-name>eFapsTransactionFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


<filter-mapping>
  <filter-name>test</filter-name>
  <url-pattern>/test/*</url-pattern>
</filter-mapping>

  <servlet>
    <servlet-name>eFapsServlet</servlet-name>
    <display-name>eFapsServlet</display-name>
    <description>no description</description>
    <servlet-class>org.efaps.ui.servlet.RequestHandler</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>eFapsCheckoutServlet</servlet-name>
    <display-name>eFapsCheckoutServlet</display-name>
    <description>eFaps servlet used to checkout files.</description>
    <servlet-class>org.efaps.ui.servlet.CheckoutServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>eFapsImageServlet</servlet-name>
    <display-name>eFapsImageServlet</display-name>
    <description>
      eFaps servlet used to checkout images stored in the database.
    </description>
    <servlet-class>org.efaps.ui.servlet.ImageServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>eFapsWebDAVServlet</servlet-name>
    <display-name>eFapsWebDAVServlet</display-name>
    <description>eFaps servlet used for WebDAV access</description>
    <servlet-class>org.efaps.ui.servlet.WebDAVServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  
  <!-- -->
  <servlet-mapping>
    <servlet-name>eFapsServlet</servlet-name>
    <url-pattern>/request/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>eFapsCheckoutServlet</servlet-name>
    <url-pattern>/servlet/checkout/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>eFapsImageServlet</servlet-name>
    <url-pattern>/servlet/image/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>eFapsWebDAVServlet</servlet-name>
    <url-pattern>/webdav/*</url-pattern>
  </servlet-mapping>

  
  <session-config>
    <session-timeout>3000</session-timeout>
  </session-config>

  <!-- reference to the database JDBC data source -->
  <resource-ref>
    <description></description>
    <res-ref-name>eFaps/jdbc</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

  <!-- reference to the database Type class implementation -->
  <resource-ref>
    <description></description>
    <res-ref-name>eFaps/dbType</res-ref-name>
    <res-type>org.efaps.db.databases.AbstractDatabase</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

  <!-- reference to the transaction manager class implementation -->
  <resource-ref>
    <description></description>
    <res-ref-name>eFaps/transactionManager</res-ref-name>
    <res-type>java.lang.Object</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

  <!-- reference to the document store resource -->
  <resource-ref>
    <description></description>
    <res-ref-name>eFaps/store/documents</res-ref-name>
    <res-type>org.efaps.db.transaction.VFSStoreFactoryBean</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

</web-app>

