<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN" "http://java.sun.com/j2ee/dtds/web-app_2_2.dtd">

<!--

 Copyright 2006 The eFaps Team

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

 Author:          tmo
 Revision:        $Rev$
 Last Changed:    $Date$
 Last Changed By: $Author$

-->

<web-app>
  <display-name>eFaps</display-name>
  <description>no description</description>

  <context-param>
    <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
    <param-value>client</param-value>
    <description>
      State saving method: "client" or "server" (= default)
      See JSF Specification 2.5.2
    </description>
  </context-param>

  <context-param>
    <param-name>org.apache.myfaces.ALLOW_JAVASCRIPT</param-name>
    <param-value>true</param-value>
    <description>
      This parameter tells MyFaces if javascript code should be allowed in the
      rendered HTML output.
      If javascript is allowed, command_link anchors will have javascript code
      that submits the corresponding form.
      If javascript is not allowed, the state saving info and nested parameters
      will be added as url parameters.
      Default: "true"
    </description>
  </context-param>

  <context-param>
    <param-name>org.apache.myfaces.DETECT_JAVASCRIPT</param-name>
    <param-value>false</param-value>
  </context-param>

  <context-param>
    <param-name>org.apache.myfaces.PRETTY_HTML</param-name>
    <param-value>true</param-value>
    <description>
      If true, rendered HTML code will be formatted, so that it is "human readable".
      i.e. additional line separators and whitespace will be written, that do not
      influence the HTML code.
      Default: "true"
    </description>
  </context-param>

  <context-param>
    <param-name>org.apache.myfaces.AUTO_SCROLL</param-name>
    <param-value>true</param-value>
    <description>
      If true, a javascript function will be rendered that is able to restore the
      former vertical scroll on every request. Convenient feature if you have pages
      with long lists and you do not want the browser page to always jump to the top
      if you trigger a link or button action that stays on the same page.
      Default: "false"
    </description>
  </context-param>


  <!-- filter used to test if a user is logged in -->
  <filter>
    <filter-name>securityFilter</filter-name>
    <filter-class>org.efaps.servlet.SecurityFilter</filter-class>
  </filter>

  <!-- Extensions Filter used for Apache myFaces -->
  <filter>
    <filter-name>extensionsFilter</filter-name>
    <filter-class>org.apache.myfaces.component.html.util.ExtensionsFilter</filter-class>
    <init-param>
      <param-name>uploadMaxFileSize</param-name>
      <param-value>100m</param-value>
      <description>Set the size limit for uploaded files.
          Format: 10 - 10 bytes
                  10k - 10 KB
                  10m - 10 MB
                  1g - 1 GB
      </description>
    </init-param>
    <init-param>
      <param-name>uploadThresholdSize</param-name>
      <param-value>100k</param-value>
      <description>Set the threshold size - files
              below this limit are stored in memory, files above
              this limit are stored on disk.

          Format: 10 - 10 bytes
                  10k - 10 KB
                  10m - 10 MB
                  1g - 1 GB
      </description>
    </init-param>
<!--        <init-param>
            <param-name>uploadRepositoryPath</param-name>
            <param-value>/temp</param-value>
            <description>Set the path where the intermediary files will be stored.
            </description>
        </init-param>-->
  </filter>

  <filter-mapping>
    <filter-name>securityFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>extensionsFilter</filter-name>
    <url-pattern>*.jsf</url-pattern>
  </filter-mapping>

  <servlet>
    <servlet-name>eFapsServlet</servlet-name>
    <display-name>eFapsServlet</display-name>
    <description>no description</description>
    <servlet-class>org.efaps.servlet.RequestHandler</servlet-class>

    <init-param>
      <param-name>urlLoginPage</param-name>
      <param-value>${ROOTURL}/login.jsp</param-value>
    </init-param>

    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>eFapsCheckoutServlet</servlet-name>
    <display-name>eFapsCheckoutServlet</display-name>
    <description>eFaps servlet used to checkout files.</description>
    <servlet-class>org.efaps.servlet.CheckoutServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>eFapsLoginServlet</servlet-name>
    <display-name>eFapsLoginServlet</display-name>
    <description>eFaps servlet used to log in to eFaps.</description>
    <servlet-class>org.efaps.servlet.LoginServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>eFapsWebDAVServlet</servlet-name>
    <display-name>eFapsWebDAVServlet</display-name>
    <description>eFaps servlet used for WebDAV access</description>
    <servlet-class>org.efaps.servlet.WebDAVServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- Java Faces Servlet -->
  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- Definition and configuration of Slide's WebDAV servlet. -->
  <servlet>
    <servlet-name>webdav</servlet-name>
    <display-name>Slide DAV Server</display-name>
    <servlet-class>org.apache.slide.webdav.WebdavServlet</servlet-class>
    <init-param>
      <param-name>domain</param-name>
      <param-value>/Domain.xml</param-value>
      <description>
        Path to the domain configuration file, relative to the path of the
        web application.
        The default is '/Domain.xml'.
      </description>
    </init-param>
    <init-param>
      <param-name>namespace</param-name>
      <param-value>eFaps/webdav</param-value>
      <description>
        Name of the Slide namespace that should be accessed by this servlet.
        If this parameter is provided, make sure the corresponding namespace
        is defined in the domain configuration file. Otherwise, the default
        namespace will be used, if one exists.
      </description>
    </init-param>
    <init-param>
      <param-name>scope</param-name>
      <param-value>/files</param-value>
      <description>
         Scope of the Slide namespace that should be exposed by this servlet.
         For example, if you want to expose only the /files collection via
         WebDAV, set this parameter to '/files'. In that case, any URLs of the
         form '/context-path/servlet-path/*' will be mapped to '/files/*'
         in the Slide namespace.
         The default value is an empty string.
      </description>
    </init-param>
    <init-param>
      <param-name>depth-limit</param-name>
      <param-value>3</param-value>
      <description>
        This init-parameter determines the depth limit for PROPFIND and other
        methods, to avoid performance hits on the server for requests with
        infinite depth.
        The default value is '3'.
      </description>
    </init-param>
    <init-param>
      <param-name>default-mime-type</param-name>
      <param-value>application/octet-stream</param-value>
      <description>
        The MIME type that should be used for resources of unknown type. For
        example, if a WebDAV client uploads a file (via PUT) without specifying
        the Content-Type header, the MIME type defined here will be used.
        The default value is 'application/octet-stream'.
      </description>
    </init-param>
    <init-param>
      <param-name>default-servlet</param-name>
      <param-value>false</param-value>
      <description>
        By default, the WebDAV servlet is mapped as default servlet of the
        web application context (the url-pattern in servlet-mapping is '/').
        If you want to change that mapping so the servlet is no longer the
        default servlet, you must change this initialization parameter to
        indicate the situation to the servlet, by setting it to 'false'.
        The default value is 'true'.
      </description>
    </init-param>
    <init-param>
        <param-name>directory-browsing</param-name>
        <param-value>true</param-value>
        <description>
             Use the 'directory-browsing' init-parameter to turn off generation of
             HTML index pages that enable browsing of collections (by setting this
             parameter to 'false'), or to specify a web-app relative path to a
             template resource (a JSP page, for example) which should handle
             generation of the HTML index page. In the latter case, you can use a
             JSP page at WEB-INF/index.jsp by specifying '/WEB-INF/index.jsp' as
             value of this parameter.
             The default value is 'true'.
        </description>
    </init-param>
    <init-param>
        <param-name>directory-browsing-hide-acl</param-name>
        <param-value>true</param-value>
        <description>
            Use this parameter to hide ACL information in generated HTML index pages.
            (see parameter "directory-browsing")
            The default value is 'true'.
        </description>
    </init-param>
    <init-param>
        <param-name>directory-browsing-hide-locks</param-name>
        <param-value>true</param-value>
        <description>
            Use this parameter to hide locking information in generated HTML index pages.
            (see parameter "directory-browsing")
            The default value is 'true'.
        </description>
    </init-param>
    <init-param>
        <param-name>optimizePropfindOutput</param-name>
        <param-value>true</param-value>
        <description>
            If set to false, the PropFindMethod will first create a (large) JDOM
            document in memory and then write it to the response stream.
            If set true, the PropFindMethod will write results to the stream as
            soon as they are available. This will reduce memory consumption
            in the case of large responses (PROPFIND on many resources).
            The output of these two variants differ slightly, since in optimized
            mode the D:DAV namespace is declared in the multistatus element AND
            in all response elements. Since this is still a valid XML document
            it shouldn't be a problem, but in case you encounter any diffculties
            this switch provides a way to get around it.
        </description>
    </init-param>
    <init-param>
        <param-name>debug</param-name>
        <param-value>0</param-value>
    </init-param>
    <init-param>
        <param-name>extendedAllprop</param-name>
        <param-value>false</param-value>
        <description>
        According to RFC3253 (DeltaV), RFCxxxx (ACL) and RFCxxxx (Binding),
        a DAV:allprop PROPFIND should not return any of the properties defined
        in any of that documents.
        For testing purposes, the specified behaviour can be disabled by
        setting this parameter "true".
        </description>
    </init-param>
    <init-param>
        <param-name>lockdiscoveryIncludesPrincipalURL</param-name>
        <param-value>false</param-value>
        <description>
            As proposed on February 08, 2003 by Lisa Dusseault in
            w3c-dist-auth-request@w3.org, the DAV:lockdiscovery property should
            include an element DAV:principal-URL with the semantics of the
            WebDAV/ACL specification. This feature is switched-off
    by default as it lead to compatibility problems with MacOS X client.
        </description>
    </init-param>
    <init-param>
        <param-name>updateLastModified</param-name>
        <param-value>true</param-value>
        <description>
            This parameter controls whether modifying properties via
            PROPPATCH causes the last modification date of the
            resource to be updated or not.
        </description>
    </init-param>
    <load-on-startup>1</load-on-startup>
    <!-- Uncomment this to get authentication -->
    <!--security-role-ref>
        <role-name>root</role-name>
        <role-link>root</role-link>
    </security-role-ref>
    <security-role-ref>
        <role-name>guest</role-name>
        <role-link>guest</role-link>
    </security-role-ref>
    <security-role-ref>
        <role-name>user</role-name>
        <role-link>user</role-link>
    </security-role-ref!-->
  </servlet>

  <!-- -->
  <servlet-mapping>
    <servlet-name>eFapsServlet</servlet-name>
    <url-pattern>request/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>eFapsCheckoutServlet</servlet-name>
    <url-pattern>servlet/checkout/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>eFapsLoginServlet</servlet-name>
    <url-pattern>servlet/login/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>eFapsWebDAVServlet</servlet-name>
    <url-pattern>webdav/*</url-pattern>
  </servlet-mapping>

  <!-- The mapping for the Slide WebDAV servlet.
     If you change the mapping so that the servlet isn't the default servlet
     anymore, make sure to set the init-parameter 'default-servlet' to
     'false'. -->
  <servlet-mapping>
      <servlet-name>webdav</servlet-name>
      <url-pattern>webdav1/*</url-pattern>
  </servlet-mapping>


<session-config>
  <session-timeout>3000</session-timeout>
</session-config>

  <!-- Establish the default list of welcome files -->
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>





  <taglib>
    <taglib-uri>http://jakarta.apache.org/taglibs/i18n-1.0</taglib-uri>
    <taglib-location>/WEB-INF/lib/taglibs-i18n.jar</taglib-location>
  </taglib>

  <taglib>
    <taglib-uri>http://jakarta.apache.org/taglibs/string</taglib-uri>
    <taglib-location>/WEB-INF/lib/string-1.1.0.jar</taglib-location>
  </taglib>

  <taglib>
    <taglib-uri>http://jakarta.apache.org/taglibs/unstandard-1.0</taglib-uri>
    <taglib-location>/WEB-INF/lib/taglibs-unstandard.jar</taglib-location>
  </taglib>

  <!-- Reference to the database JDBC data source -->
  <resource-ref>
    <description></description>
    <res-ref-name>eFaps/jdbc</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

  <!-- Reference to the database Type class implementation -->
  <resource-ref>
    <description></description>
    <res-ref-name>eFaps/dbType</res-ref-name>
    <res-type>org.efaps.db.databases.AbstractDatabase</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

  <!-- Authetication for the WebDAV servlet -->
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>DAV resource</web-resource-name>
      <url-pattern>/webdav/*</url-pattern>
      <http-method>COPY</http-method>
      <http-method>DELETE</http-method>
      <http-method>GET</http-method>
      <http-method>HEAD</http-method>
      <http-method>LOCK</http-method>
      <http-method>MKCOL</http-method>
      <http-method>MOVE</http-method>
      <http-method>OPTIONS</http-method>
      <http-method>POST</http-method>
      <http-method>PROPFIND</http-method>
      <http-method>PROPPATCH</http-method>
      <http-method>PUT</http-method>
      <http-method>UNLOCK</http-method>
      <http-method>VERSION-CONTROL</http-method>
      <http-method>REPORT</http-method>
      <http-method>CHECKIN</http-method>
      <http-method>CHECKOUT</http-method>
      <http-method>UNCHECKOUT</http-method>
      <http-method>MKWORKSPACE</http-method>
      <http-method>UPDATE</http-method>
      <http-method>LABEL</http-method>
      <http-method>MERGE</http-method>
      <http-method>BASELINE-CONTROL</http-method>
      <http-method>MKACTIVITY</http-method>
      <http-method>ACL</http-method>
      <http-method>SEARCH</http-method>
      <http-method>BIND</http-method>
      <http-method>UNBIND</http-method>
      <http-method>REBIND</http-method>
      <http-method>SUBSCRIBE</http-method>
      <http-method>UNSUBSCRIBE</http-method>
      <http-method>POLL</http-method>
      <http-method>NOTIFY</http-method>
    </web-resource-collection>
    <auth-constraint>
      <role-name>*</role-name>
<!--      <role-name>root</role-name>
      <role-name>guest</role-name>
      <role-name>user</role-name>
-->
    </auth-constraint>
  </security-constraint>

  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>Slide DAV Server</realm-name>
  </login-config>
  <security-role>
    <role-name>root</role-name>
  </security-role>
  <security-role>
    <role-name>guest</role-name>
  </security-role>
  <security-role>
    <role-name>user</role-name>
  </security-role>

</web-app>

